#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\usetheme{Warsaw}
% or ...

\setbeamercovered{transparent}
% or whatever (possibly just delete it)
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "times" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures false
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
This file is a solution template for:
\end_layout

\begin_layout Itemize
Talk at a conference/colloquium.
 
\end_layout

\begin_layout Itemize
Talk length is about 20min.
 
\end_layout

\begin_layout Itemize
Style is ornate.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Copyright 2004 by Till Tantau <tantau@users.sourceforge.net>.
 
\end_layout

\begin_layout Plain Layout
In principle, this file can be redistributed and/or modified under the terms
 of the GNU Public License, version 2.
 However, this file is supposed to be a template to be modified for your
 own needs.
 For this reason, if you use this file as a template and not specifically
 distribute it as part of a another package/program, the author grants the
 extra permission to freely copy and modify this file as you see fit and
 even to delete this copyright notice.
 
\end_layout

\end_inset


\end_layout

\begin_layout Title
Hypercoercions and a Framework for Equivalence of Cast Calculi
\end_layout

\begin_layout Author
Kuang-Chen Lu
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 Jeremy G.
 Siek
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 Andre Kuhlenschmidt
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset


\end_layout

\begin_layout Institute
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

Department of Computer Science
\begin_inset Newline newline
\end_inset

Indiana University Bloomington
\end_layout

\begin_layout Date
Workshop on Gradual Typing, 2020
\begin_inset Note Note
status collapsed

\begin_layout Itemize
Either use conference name or its abbreviation.
 
\end_layout

\begin_layout Itemize
Not really informative to the audience, more for people (including yourself)
 who are reading the slides online
\end_layout

\end_inset


\begin_inset Argument 1
status collapsed

\begin_layout Plain Layout
WGT 2003
\begin_inset Note Note
status open

\begin_layout Plain Layout
optional, should be abbreviation of conference name
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
If you have a file called "institution-logo-filename.xxx", where xxx is a
 graphic format that can be processed by latex or pdflatex, resp., then you
 can add a logo by uncommenting the following:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pgfdeclareimage[height=0.5cm]{institution-logo}{institution-logo.jpg}
\end_layout

\begin_layout Plain Layout


\backslash
logo{
\backslash
pgfuseimage{institution-logo}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
AtBeginSubsection[]{%
\end_layout

\begin_layout Plain Layout

%  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

%    
\backslash
frametitle{Outline}   
\end_layout

\begin_layout Plain Layout

%    
\backslash
tableofcontents[currentsection,currentsubsection] 
\end_layout

\begin_layout Plain Layout

%  }
\end_layout

\begin_layout Plain Layout

%}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
If you wish to uncover everything in a step-wise fashion, uncomment the
 following command:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
beamerdefaultoverlayspecification{<+->}
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Outline
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Structuring a talk is a difficult task and the following structure may not
 be suitable.
 Here are some rules that apply for this solution: 
\end_layout

\begin_layout Itemize
Exactly two or three sections (other than the summary).
 
\end_layout

\begin_layout Itemize
At *most* three subsections per section.
 
\end_layout

\begin_layout Itemize
Talk about 30s to 2min per frame.
 So there should be between about 15 and 30 frames, all told.
\end_layout

\begin_layout Itemize
A conference audience is likely to know very little of what you are going
 to talk about.
 So *simplify*! 
\end_layout

\begin_layout Itemize
In a 20min talk, getting the main ideas across is hard enough.
 Leave out details, even if it means being less precise than you think necessary.
 
\end_layout

\begin_layout Itemize
If you omit details that are vital to the proof/implementation, just say
 so once.
 Everybody will be happy with that.
 
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Section
Hypercoercions
\end_layout

\begin_layout Subsection
The Space-Efficiency Problem
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
An Example Program
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
\begin_inset Note Note
status open

\begin_layout Plain Layout
A title should summarize the slide in an understandable fashion for anyone
 how does not follow everything on the slide itself.
 
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Frame
\begin_inset Graphics
	filename resources/even-odd.png
	scale 30

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
The Space-Efficiency Problem
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Casts might accumulate on continuations (call stacks)
\end_layout

\begin_layout Itemize
Casts might accumulate in values as proxies
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsection
Existing Solutions
\end_layout

\begin_layout Frame

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Solutions: Space-Efficient Cast Representations
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Coercions in normal forms 
\begin_inset CommandInset citation
LatexCommand cite
key "herman2010space,siek2012interpretations,Siek:2015:BCT:2737924.2737968"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
Threesomes 
\begin_inset CommandInset citation
LatexCommand cite
key "Siek:2010:TWB:1706299.1706342,Garcia:2013:CTB:2500365.2500603"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
Supercoercions 
\begin_inset CommandInset citation
LatexCommand cite
key "Garcia:2013:CTB:2500365.2500603"
literal "false"

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Criteria for 
\begin_inset Quotes eld
\end_inset

Good
\begin_inset Quotes erd
\end_inset

 Cast Representations 
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "45text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename resources/thinking-face.png
	scale 25

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "45text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename resources/all-proof-assistants.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Threesomes are Difficult to Understand
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Wrap figure
lines 0
placement I
overhang 0in
width "50col%"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename resources/Philip_Wadler.jpg
	scale 70

\end_inset


\end_layout

\end_inset


\shape italic

\begin_inset Quotes eld
\end_inset

\SpecialChar ldots
 while preparing a lecture on threesomes a few years after the paper was
 published, he required several hours to puzzle out the meaning of his own
 notation, 
\begin_inset Formula $\bot^{mGp}$
\end_inset


\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Siek:2015:BCT:2737924.2737968"
literal "false"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Coercions in Normal Form are Difficult to Mechanize
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename resources/composition-of-coercions-in-normal-form.png
	scale 30

\end_inset

 
\end_layout

\begin_layout Plain Layout
v.s.
 
\end_layout

\begin_layout Plain Layout
~100 Lines of Agda Code
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsection
Our Solution: Hypercoercions
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Our Solution: Hypercoercions
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename resources/hypercoercions-syntax.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
Composition of hypercoercions is morally a structural recursion!
\end_layout

\end_inset


\end_layout

\begin_layout Section
Equivalence of Cast Calculi
\end_layout

\begin_layout Subsection
Cast Representations Should be Proved Correct
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
What do We Mean by a Cast Representation is Correct?
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Formula 
\[
\text{eval}_{X}(e)=o\text{ if and only if }\text{eval}_{\text{D}}(e)=o
\]

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Formula 
\[
\text{eval}_{X}(e)=o\text{ if and only if }\text{eval}_{\text{UD}}(e)=o
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsection
Our Solution: CastADT + Parameterized Dynamics
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Our Solution: Every Lazy D CastADT is Correct
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Theorem
Suppose that 
\begin_inset Formula $C$
\end_inset

 is a Lazy D Cast ADT.
 If 
\begin_inset Formula $e:T$
\end_inset

 and 
\begin_inset Formula $o:T$
\end_inset

 then
\begin_inset Formula 
\[
\text{eval}_{S(C)}(e)=o\text{ if and only if }\text{eval}_{\text{D}}(e)=o
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
How does 
\begin_inset Formula $S(C)$
\end_inset

 work?
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Every continuation has exactly one cast frame at the top.
\end_layout

\begin_layout Itemize
Every non-constant value has exactly one proxy.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
What is a Cast ADT?
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features tabularvalignment="middle">
<column alignment="right" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\text{id}(T)=c$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
identity cast
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\text{seq(c,c)}=c$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cast composition
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\text{cast}(T,l,T)=c$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
translate casts in source language
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\text{applyCast}(v,c)=r$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cast application
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
What is a Lazy D Cast ADT?
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\text{applyCast}(\text{id}(T),v)=\text{succ}(v)$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\text{applyCast}(\text{seq}(c,d),v)=\text{applyCast}(c,v)\underline{\gg}\lambda u.\text{applyCast}(d,u)$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\text{applyCast}(\text{cast}(S,l,T),v)$
\end_inset

 respects the Lazy D blame strategy.
\end_layout

\end_deeper
\begin_layout Section*
Summary
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Summary
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
We presented Lazy D and Lazy UD 
\begin_inset Flex Alert
status open

\begin_layout Plain Layout
hypercoercions
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
We proved that every 
\begin_inset Flex Alert
status open

\begin_layout Plain Layout
Lazy D Cast ADT
\end_layout

\end_inset

 is correct.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
An outlook is always optional.
\end_layout

\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Outlook
\end_layout

\begin_deeper
\begin_layout Itemize
Define a Lazy UD Cast ADT and prove a similar theorem.
\end_layout

\begin_layout Itemize
Proof existing cast representations are Lazy D/UD Cast ADT
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
References
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "/home/lukc/hypercoercion-and-framework-wgt2020/bibfile"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
