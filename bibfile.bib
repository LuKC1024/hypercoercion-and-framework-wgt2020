@inproceedings{siek2015blame,
	author = {Siek, Jeremy and Thiemann, Peter and Wadler, Philip},
	booktitle = {ACM SIGPLAN Notices},
	number = {6},
	organization = {ACM},
	pages = {425--435},
	title = {Blame and coercion: together again for the first time},
	volume = {50},
	year = {2015}
}

@inproceedings{siek2010threesomes,
	author = {Siek, Jeremy G and Wadler, Philip},
	booktitle = {ACM Sigplan Notices},
	number = {1},
	organization = {ACM},
	pages = {365--376},
	title = {Threesomes, with and without blame},
	volume = {45},
	year = {2010}
}

@inproceedings{garcia2013calculating,
	author = {Garcia, Ronald},
	booktitle = {ACM SIGPLAN Notices},
	number = {9},
	organization = {ACM},
	pages = {417--428},
	title = {Calculating threesomes, with blame},
	volume = {48},
	year = {2013}
}

@article{herman2010space,
	author = {Herman, David and Tomb, Aaron and Flanagan, Cormac},
	journal = {Higher-Order and Symbolic Computation},
	number = {2},
	pages = {167},
	publisher = {Springer},
	title = {Space-efficient gradual typing},
	volume = {23},
	year = {2010}
}

@inproceedings{siek2006gradual,
	author = {Siek, Jeremy G and Taha, Walid},
	booktitle = {Scheme and Functional Programming Workshop},
	pages = {81--92},
	title = {Gradual typing for functional languages},
	volume = {6},
	year = {2006}
}

@article{henglein1994dynamic,
	author = {Henglein, Fritz},
	journal = {Science of Computer Programming},
	number = {3},
	pages = {197--230},
	publisher = {Elsevier},
	title = {Dynamic typing: Syntax and proof theory},
	volume = {22},
	year = {1994}
}

@inproceedings{wadler2009well,
	author = {Wadler, Philip and Findler, Robert Bruce},
	booktitle = {European Symposium on Programming},
	organization = {Springer},
	pages = {1--16},
	title = {Well-typed programs can{\rq}t be blamed},
	year = {2009}
}

@inproceedings{siek2009exploring,
	author = {Siek, Jeremy and Garcia, Ronald and Taha, Walid},
	booktitle = {European Symposium on Programming},
	organization = {Springer},
	pages = {17--31},
	title = {Exploring the design space of higher-order casts},
	year = {2009}
}

@article{new2019gradual,
	author = {New, Max S and Licata, Daniel R and Ahmed, Amal},
	journal = {Proceedings of the ACM on Programming Languages},
	number = {POPL},
	pages = {15},
	publisher = {ACM},
	title = {Gradual type theory},
	volume = {3},
	year = {2019}
}

@inproceedings{kuhlenschmidt2018efficient,
	author = {Kuhlenschmidt, Andre and Almahallawi, Deyaaeldeen and Siek, Jeremy G},
	booktitle = {Scheme and Functional Programming Workshop},
	title = {An efficient compiler for the gradually typed lambda calculus},
	volume = {18},
	year = {2018}
}

@inproceedings{siek2012interpretations,
	author = {Siek, Jeremy G and Garcia, Ronald},
	booktitle = {Proceedings of the 2012 Annual Workshop on Scheme and Functional Programming},
	organization = {ACM},
	pages = {68--80},
	title = {Interpretations of the gradually-typed lambda calculus},
	year = {2012}
}

